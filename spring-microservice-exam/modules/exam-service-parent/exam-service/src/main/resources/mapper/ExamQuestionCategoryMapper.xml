<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.tangyi.exam.mapper.ExamQuestionCategoryMapper">
    <resultMap id="examQuestionCategoryResultMap" type="com.github.tangyi.exam.api.module.ExamQuestionCategory">
        <id column="id" property="id"/>
        <result column="question_type_id" property="questionTypeId"/>
        <result column="question_type_score" property="questionTypeScore"/>
        <result column="category_id" property="categoryId"/>
        <result column="question_simple_num" property="questionSimpleNum"/>
        <result column="question_commonly_num" property="questionCommonlyNum"/>
        <result column="question_difficulty_num" property="questionDifficultyNum"/>
        <result column="examination_id" property="examinationId"/>
    </resultMap>

    <resultMap id="questionBankChartMap" type="com.github.tangyi.exam.api.vo.QuestionBankChartVO">
        <id column="name" property="name"/>
        <result column="value" property="value"/>
    </resultMap>

    <resultMap id="questionTypesChartMap" type="com.github.tangyi.exam.api.vo.QuestionBankChartVO">
        <id column="name" property="name"/>
        <result column="value" property="value"/>
    </resultMap>

    <resultMap id="difficultyLevelChartMap" type="com.github.tangyi.exam.api.vo.DifficultyLevelChartVO">
        <result column="simpleNum" property="simpleNum"/>
        <result column="commonlyNum" property="commonlyNum"/>
        <result column="difficultyNum" property="difficultyNum"/>
    </resultMap>

    <sql id="examQuestionCategoryColumns">
        a.id,
        a.question_type_id,
        a.question_type_score,
        a.category_id,
        a.question_simple_num,
        a.question_commonly_num,
        a.question_difficulty_num,
        a.examination_id
    </sql>

    <select id="findRuleByExaminationId" resultMap="examQuestionCategoryResultMap">
        select
        <include refid="examQuestionCategoryColumns"/>
        from exam_question_category a where a.examination_id = #{examinationId} ORDER BY question_type_id
    </select>

    <delete id="delete">
      delete from exam_question_category WHERE examination_id = #{examinationId}
    </delete>

    <insert id="insertForeach" parameterType="java.util.List" useGeneratedKeys="false">
    insert into exam_question_category (
    question_type_id,
    category_id,
    question_simple_num,
    question_commonly_num,
    question_difficulty_num,
    examination_id
    ) values
    <foreach collection="list" item="item" index="index" separator=",">
        (
            #{item.questionTypeId},
            #{item.id},
            #{item.simpleNum},
            #{item.commonlyNum},
            #{item.difficultyNum},
            #{item.examId}
        )
    </foreach>
    </insert>

    <insert id="insertForeachCategory" parameterType="java.util.List">
        insert into exam_question_category (
        question_type_id,
        category_id,
        examination_id
        ) values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.questionTypeId},
            #{item.categoryId},
            #{item.examId}
            )
        </foreach>
    </insert>
    <delete id="deleteById" >
        delete from exam_question_category where examination_id=#{id}
    </delete>

    <select id="questionTypesChart" resultMap="questionTypesChartMap">
        SELECT a.quesrtion_type_name AS NAME, b.value FROM exam_question_type a JOIN
        (SELECT question_type_id, (SUM(question_simple_num) + SUM(question_commonly_num) + SUM(question_difficulty_num)) AS VALUE  FROM exam_question_category
        WHERE examination_id = #{examinationId} GROUP BY question_type_id) b
        ON a.id = b.question_type_id
    </select>

    <select id="questionBankChart" resultMap="questionBankChartMap">
        SELECT a.`category_name` as name, (b.simpleNum + commonlyNum + difficultyNum ) as value FROM exam_subject_category a JOIN
         (SELECT category_id,SUM(question_simple_num) AS simpleNum, SUM(question_commonly_num) AS commonlyNum, SUM(question_difficulty_num) AS difficultyNum
          FROM exam_question_category WHERE examination_id = #{examinationId} GROUP BY category_id) b
         ON a.`id` = b.category_id
    </select>

    <select id="difficultyLevelChart" resultMap="difficultyLevelChartMap">
        SELECT SUM(question_simple_num) AS simpleNum, SUM(question_commonly_num) AS commonlyNum,
        SUM(question_difficulty_num) AS difficultyNum FROM exam_question_category WHERE examination_id = #{examinationId}
    </select>

    <!--&lt;!&ndash; where 条件 &ndash;&gt;-->
    <!--<sql id="whereColumnList">-->
        <!--<if test="examRecordId != null and examRecordId != ''">-->
            <!--and a.exam_record_id = #{examRecordId}-->
        <!--</if>-->
        <!--<if test="subjectId != null and subjectId != ''">-->
            <!--and a.subject_id = #{subjectId}-->
        <!--</if>-->
        <!--<if test="type != null and type != ''">-->
            <!--and a.type = #{type}-->
        <!--</if>-->
        <!--<if test="answerType != null and answerType != ''">-->
            <!--and a.answer_type = #{answerType}-->
        <!--</if>-->
        <!--<if test="markStatus != null and markStatus != ''">-->
            <!--and a.mark_status = #{markStatus}-->
        <!--</if>-->
        <!--<if test="tenantCode != null and tenantCode != ''">-->
            <!--and a.tenant_code = #{tenantCode}-->
        <!--</if>-->
    <!--</sql>-->



    <!--<select id="getAnswer" resultMap="answerResultMap">-->
        <!--SELECT-->
        <!--<include refid="answerColumns"/>-->
        <!--FROM exam_answer a-->
        <!--WHERE a.exam_record_id = #{examRecordId}-->
        <!--and a.subject_id = #{subjectId}-->
    <!--</select>-->

    <!--<select id="findList" resultMap="answerResultMap">-->
        <!--SELECT-->
        <!--<include refid="answerColumns"/>-->
        <!--FROM exam_answer a-->
        <!--WHERE a.del_flag = 0-->
        <!--<include refid="whereColumnList"/>-->
    <!--</select>-->

    <!--<select id="findListByExamRecordId" resultMap="answerResultMap">-->
        <!--SELECT-->
        <!--<include refid="answerColumns"/>-->
        <!--FROM exam_answer a-->
        <!--WHERE a.del_flag = 0-->
        <!--AND a.exam_record_id = #{examRecordId}-->
     <!--</select>-->



    <!--<update id="update">-->
        <!--UPDATE exam_answer SET-->
        <!--<if test="examRecordId != null">-->
            <!--exam_record_id = #{examRecordId},-->
        <!--</if>-->
        <!--<if test="subjectId != null">-->
            <!--subject_id = #{subjectId},-->
        <!--</if>-->
        <!--<if test="type != null">-->
            <!--type = #{type},-->
        <!--</if>-->
        <!--<if test="answer != null">-->
            <!--answer = #{answer},-->
        <!--</if>-->
        <!--<if test="answerType != null">-->
            <!--answer_type = #{answerType},-->
        <!--</if>-->
        <!--<if test="score != null">-->
            <!--score = #{score},-->
        <!--</if>-->
        <!--<if test="markStatus != null">-->
            <!--mark_status = #{markStatus},-->
        <!--</if>-->
        <!--<if test="startTime != null">-->
            <!--start_time = #{startTime},-->
        <!--</if>-->
        <!--<if test="endTime != null">-->
            <!--end_time = #{endTime},-->
        <!--</if>-->
        <!--<if test="delFlag != null">-->
            <!--del_flag = #{delFlag},-->
        <!--</if>-->
        <!--modifier = #{modifier},-->
        <!--modify_date = #{modifyDate, jdbcType=TIMESTAMP, javaType=java.util.Date}-->
        <!--WHERE id = #{id}-->
    <!--</update>-->


</mapper>
